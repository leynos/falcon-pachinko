name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    env:
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: |
          make build
          uv pip install slipcover pytest-forked

      - name: Check formatting
        run: make check-fmt

      - name: Run ruff
        run: make lint

      - name: Run pyright
        run: make typecheck

      - name: Run tests with coverage
        run: |
          uv run python -m slipcover \
            --source=./falcon_pachinko \
            --omit="*/unittests/*,*/.venv/*" \
            --branch \
            --out coverage.xml \
            -m pytest --forked -v falcon_pachinko/unittests

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml

      - name: Install CodeScene Coverage CLI
        if: env.CS_ACCESS_TOKEN != ''
        run: |
          curl -fsSL https://downloads.codescene.io/enterprise/cli/install-cs-coverage-tool.sh | bash -s -- -y
          if [ -n "${CODESCENE_CLI_SHA256:-}" ]; then
            echo "${CODESCENE_CLI_SHA256}  install-cs-coverage-tool.sh" | sha256sum -c -
          fi

      - name: Upload coverage to CodeScene
        if: env.CS_ACCESS_TOKEN != ''
        run: |
          if [ ! -f coverage.xml ]; then
            echo "coverage.xml not found!"
            exit 1
          fi
          cs-coverage upload \
            --format "cobertura" \
            --metric "line-coverage" \
            coverage.xml
